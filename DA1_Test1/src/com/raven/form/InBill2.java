/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package com.raven.form;

import com.itextpdf.text.*;
import com.edusys.utils.format;
import com.code.dao.HoaDonChiTietDao;
import com.code.dao.SanPhamDao;
import com.code.model.HoaDonChiTiet;
import com.code.model.SanPham;
import com.itextpdf.text.Document;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.Font;
import java.io.FileOutputStream;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Vector;
import javax.swing.JLabel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
//import javax.swing.text.Element;
import com.itextpdf.text.*;
import com.itextpdf.text.Element;
import com.itextpdf.text.pdf.BaseFont;
import java.awt.FontMetrics;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.print.PageFormat;
import java.awt.print.Paper;
import java.awt.print.Printable;
import static java.awt.print.Printable.NO_SUCH_PAGE;
import static java.awt.print.Printable.PAGE_EXISTS;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;

public class InBill2 extends javax.swing.JDialog implements Printable {

    public JTable tblModel;
    public JLabel label;
    public JLabel lblMaKH;
    public JLabel lblTenKH;
    public JLabel lblSDT;
    public JLabel lblDiaChi;
    public JLabel lblGiamGia;
    public JLabel lblTongTien;
    public JLabel lblThanhTien;
    public static String maHD;
    public DefaultTableModel model;
    Font font = new Font("Time New RoMan", Font.BOLD, 14);

    public InBill2(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
//        loadToTable("HD002");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        lblNgayIn = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Số DT: 0899672816");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Địa chỉ:  Trường Thạnh, Cái răng, Cần Thơ.");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Black And White Fashion Shop");

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Hóa đơn Mua Hàng");

        lblNgayIn.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblNgayIn.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblNgayIn.setText("Ngày: ");

        jButton1.setText("IN");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 580, Short.MAX_VALUE)
            .addComponent(lblNgayIn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblNgayIn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 574, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        PrinterJob pj = PrinterJob.getPrinterJob();
        pj.setPrintable(this, getPageFormat(pj));
        boolean ok = pj.printDialog();
        if (ok) {
            try {
                pj.print();
            } catch (PrinterException ex) {
            }
        }
        this.setVisible(false);

    }//GEN-LAST:event_jButton1ActionPerformed

//     xét khổ giấy dài rộng
    public PageFormat getPageFormat(PrinterJob pj) {

        PageFormat pf = pj.defaultPage();
        Paper paper = pf.getPaper();

        double width = pf.getImageableWidth();
        double height = pf.getImageableHeight();
        paper.setSize(width, height);
        paper.setImageableArea(0, 10, width, height - cm_to_pp(58));
        pf.setOrientation(PageFormat.PORTRAIT);
        pf.setPaper(paper);
        return pf;
    }

    protected static double cm_to_pp(double cm) {
        return toPPI(cm * 0.393600787);
    }

    protected static double toPPI(double inch) {
        return inch * 58d;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InBill2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InBill2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InBill2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InBill2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                InBill2 dialog = new InBill2(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel lblNgayIn;
    // End of variables declaration//GEN-END:variables
    List<HoaDonChiTiet> list = new ArrayList();
    HoaDonChiTietDao dao = new HoaDonChiTietDao();
    Date dateNow = new Date();
    SimpleDateFormat formater = new SimpleDateFormat("dd/MM/yyyy");
    String text = formater.format(dateNow);
    String tenKH;
    String sdt;
    String diaChi;

    public void setForm() {
        list = dao.getSelectAll(maHD);
        for (HoaDonChiTiet itemp : list) {
            Font font = new Font("Time New RoMan", Font.PLAIN, 14);
            setLabel(lblTenKH, "Tên KH: " + itemp.getTenKH(), font, 5, 150, 200, 20);
            setLabel(lblMaKH, "Mã HD: " + maHD, font, 380, 150, 200, 20);
            setLabel(lblDiaChi, "Địa chỉ : " + itemp.getDiaChi(), font, 5, 175, 200, 20);
            setLabel(lblSDT, "SDT    : " + itemp.getsDT(), font, 380, 175, 200, 20);
            tenKH = itemp.getTenKH();
            diaChi = itemp.getDiaChi();
            sdt = itemp.getsDT();
        }

        lblNgayIn.setText("   Ngày : " + text);
    }

    public void setLabel(JLabel lbl, String text, Font font, int x, int y, int width, int height) {
        lbl = new JLabel();
        lbl.setText(text);
        lbl.setFont(font);
        lbl.setBounds(x, y, width, height);
        this.add(lbl);
    }
    double tongTien = 0;
    float giamGia = 0;
    double thanhTien;

    public void loadToTable(String ma) {
        maHD = ma;
        setForm();
        Vector<Vector<Object>> data = new Vector<>();
        list = dao.getSelectAll(ma);
        int stt = 0;

        System.out.println("mã hd " + maHD);
        for (HoaDonChiTiet itemp : list) {
            stt++;
            Vector<Object> row = new Vector<>();
            row.add(stt);
            row.add(itemp.getTenSP());
            row.add(itemp.getMau());
            row.add(itemp.getSize());
            row.add(format.formatPrice(itemp.getGia() + ""));
            row.add(itemp.getSoLuong());
            row.add(itemp.getGiamGia() + "%");
            row.add(format.formatPrice((itemp.getGia() * itemp.getSoLuong()) * (1 - (itemp.getGiamGia() / 100)) + ""));
            data.add(row);
            tongTien += ((itemp.getGia() * itemp.getSoLuong()) * (1 - (itemp.getGiamGia() / 100)));
        }
        Vector<String> columnNames = new Vector<>();
        columnNames.add("Số TT");
        columnNames.add("Tên SP");
        columnNames.add("Màu");
        columnNames.add("Size");
        columnNames.add("Giá");
        columnNames.add("Số Lượng");
        columnNames.add("Giảm Giá");
        columnNames.add("Thành Tiền");
        model = new DefaultTableModel(data, columnNames) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        tblModel = new JTable(model);
        tblModel.getColumnModel().getColumn(0).setPreferredWidth(5);
        JScrollPane scp = new JScrollPane(tblModel);
        int index = tblModel.getRowHeight();
        int height = ((tblModel.getRowCount()) * index) + 28;
        if (height > 268) {
            height = 268;
        }
        scp.setBounds(5, 200, 540, height);
        this.add(scp);
        pack();
        setLocationRelativeTo(null);
        if (tongTien > 1000000) {
            giamGia = 100000;
        } else if (tongTien > 2000000) {
            giamGia = 200000;
        } else if (tongTien > 5000000) {
            giamGia = 500000;
        }
        thanhTien = tongTien - giamGia;
        setLabel(lblTongTien, "Tổng Tiền: " + format.formatPrice(tongTien + "") + "đ", font, 355, ((tblModel.getRowCount()) * index) + 190, 500, 100);
        setLabel(lblGiamGia, "Giảm giá: " + format.formatPrice(giamGia + "") + "đ", font, 365, ((tblModel.getRowCount()) * index) + 220, 500, 100);
        setLabel(lblGiamGia, "Thành Tiền: " + format.formatPrice(thanhTien + "") + "đ", font, 350, ((tblModel.getRowCount()) * index) + 250, 500, 100);
    }

    @Override
    public int print(Graphics graphics, PageFormat pageFormat, int pageIndex) {
        Float totalAmount = 0.0F;
        Float change = 0.0F;
        int result = NO_SUCH_PAGE;
        if (pageIndex == 0) {
            Graphics2D g2d = (Graphics2D) graphics;
            double width = pageFormat.getImageableWidth();
            g2d.translate((int) pageFormat.getImageableX(), (int) pageFormat.getImageableY());

            FontMetrics metrics = g2d.getFontMetrics(new Font("Segoe UI", Font.BOLD, 7));
            try {
                int y = 10;
                int yShift = 15; // KHOẢNG CÁCH DÒNG
                int headerRectHeight = 15;
                g2d.translate((int) pageFormat.getImageableX(), (int) pageFormat.getImageableY());
                double wh = pageFormat.getImageableWidth();
                double ht = pageFormat.getImageableHeight();
                g2d.drawImage(null, 0, 0, (int) wh, (int) ht, null);

                g2d.setFont(new Font("Courier New", Font.PLAIN, 9));
                y += yShift + 30;
                g2d.drawString("                          The Rubik Shop ", 20, y);
                y += yShift;
                g2d.drawString("      Điạ chỉ: 334B Đ.Nguyễn Văn Linh, Phường Hưng Lợi, Quận Ninh Kiều,  ", 20, y);
                y += yShift;
                g2d.drawString("                             Tp.Cần Thơ. ", 20, y);
                y += yShift;
                g2d.drawString("                         Ngày: " + text, 20, y);
                y += yShift;
                g2d.drawString("                         HÓA ĐƠN BÁN HÀNG ", 20, y);
                y += yShift;
                y += yShift;
                g2d.drawString("Tên KH :" + tenKH+ "                                     " + "Mã HD: " + maHD, 10, y);
                y += yShift;
                g2d.drawString("Địa chỉ:" +diaChi + "                                       " + " SDT : " + sdt, 10, y);
                y += yShift;
                g2d.drawString("-------------------------------------------------------------------------------------------", 0, y);
                y += headerRectHeight;
                g2d.drawString(" Tên Sản Phẩm    Màu       Size    Giá      SL   Giảm Giá    Thành Tiền  ", 2, y);
                y += yShift;
                g2d.drawString("-------------------------------------------------------------------------------------------", 0, y);
                y += headerRectHeight;
                for (HoaDonChiTiet cthd : list) {
                    String maSP = cthd.getTenSP();
                    String tenMau = cthd.getMau();
                    String tenSize = cthd.getSize();
                    String donGia = format.formatPrice(String.valueOf(cthd.getGia()));
                    String soLuong = String.valueOf(cthd.getSoLuong());
                    String giamGia = String.valueOf(cthd.getGiamGia());
                    String thanhTien = format.formatPrice(String.valueOf((cthd.getSoLuong() * list.get(0).getGia()) * (1 - (cthd.getGiamGia() / 100))));

                    // Sử dụng String.format() để định dạng đều các cột
                    String formattedString = String.format("%-15s %-10s %-5s %-10s %-5s %-10s %-10s", maSP, tenMau, tenSize, donGia, soLuong, giamGia, thanhTien);

                    g2d.drawString(formattedString, 5, y);
                    y += yShift;
                }
                y += yShift;
                g2d.drawString("                                               Tổng tiền :  " + format.formatPrice(tongTien + ""), 10, y);
                y += yShift;
                g2d.drawString("                                                Giảm giá :  " + format.formatPrice(giamGia + ""), 10, y);
                y += yShift;
                g2d.drawString("                                                Thành tiền:  " + format.formatPrice(thanhTien + ""), 7, y);
                y += yShift;

                g2d.drawString("               The Rubik shop xin cảm ơn và hẹn gặp lại quý khách    ", 10, y);
                y += yShift;
                y += yShift;

            } catch (Exception e) {
            }
            result = PAGE_EXISTS;
        }
        return result;
    }

}
