/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.raven.form;

import com.code.dao.CTNhapHangDao;
import com.code.dao.MauDao;
import com.code.dao.NhapHangDao;
import com.code.dao.SanPhamChiTietDao;
import com.code.dao.SanPhamDao;
import com.code.dao.SizeDao;
import com.code.db.DBHelper;
import com.code.model.CTNhapHang;
import com.code.model.Mau;
import com.code.model.NhapHang;
import com.code.model.SanPham;
import com.code.model.SanPhamChiTiet;
import com.code.model.Size;
import java.awt.Color;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.util.ArrayList;
import java.util.List;
import javax.swing.BorderFactory;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/**
 *
 * @author phuck
 */
public class QuanLyCTNH extends javax.swing.JFrame {

    /**
     * Creates new form QuanLyCTNH
     */
    private List<SanPhamChiTiet> listCTSP = new ArrayList<>();
    private List<CTNhapHang> listNhap = new ArrayList<>();
    private List<SanPham> listSP = new ArrayList<>();
    private List<Size> listSize = new ArrayList<>();
    private List<Mau> listMau = new ArrayList<>();
    SanPhamChiTietDao daospct = new SanPhamChiTietDao();

    public QuanLyCTNH() {
        initComponents();
        setDefaultCloseOperation(QuanLyCTNH.DISPOSE_ON_CLOSE);
        setLocationRelativeTo(this);
        colorBorder();
        loadTablChiTietSP();
        loadTablCTNhapHang();
        fillTongTien();
        fillTongSoLuong();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtTimKiem = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDanhSachSPCT = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        btnThem = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnMo = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblDanhSachNhapCT = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtSoLuongNhap = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtDonGia = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jlbMaNHCT = new javax.swing.JLabel();
        jlbMaNhap = new javax.swing.JLabel();
        jlbTongSL = new javax.swing.JLabel();
        jlbTongTien = new javax.swing.JLabel();
        jlbMaSP = new javax.swing.JLabel();
        jlbSLDC = new javax.swing.JLabel();
        cboMau = new javax.swing.JComboBox<>();
        cboSize = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setText("Tìm Kiếm:");

        tblDanhSachSPCT.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblDanhSachSPCT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDanhSachSPCTMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblDanhSachSPCT);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Mã NHCT:");

        btnThem.setBackground(new java.awt.Color(153, 153, 255));
        btnThem.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnThem.setForeground(new java.awt.Color(255, 255, 255));
        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnXoa.setBackground(new java.awt.Color(153, 153, 255));
        btnXoa.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnXoa.setForeground(new java.awt.Color(255, 255, 255));
        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnMo.setBackground(new java.awt.Color(153, 153, 255));
        btnMo.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnMo.setForeground(new java.awt.Color(255, 255, 255));
        btnMo.setText("Mở");
        btnMo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMoActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Mã Nhập:");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Mã SP:");

        tblDanhSachNhapCT.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblDanhSachNhapCT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDanhSachNhapCTMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblDanhSachNhapCT);

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Màu:");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Size:");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel7.setText("SL Đang Có:");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("SL Nhập:");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel9.setText("Đơn Giá:");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel10.setText("Tổng SL:");

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel11.setText("Tổng Tiền:");

        jlbMaNHCT.setText("0");

        jlbMaNhap.setText("Mã Nhập");

        jlbTongSL.setText("0");

        jlbTongTien.setText("0");

        jlbMaSP.setText("Mã Sản Phẩm");

        jlbSLDC.setText("0");

        cboMau.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cboMauMouseClicked(evt);
            }
        });
        cboMau.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboMauActionPerformed(evt);
            }
        });

        cboSize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboSizeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(2, 2, 2)
                        .addComponent(txtTimKiem))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 539, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(btnMo, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGap(28, 28, 28)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtSoLuongNhap)
                            .addComponent(txtDonGia)
                            .addComponent(jlbMaNHCT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jlbMaNhap, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jlbTongSL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jlbTongTien, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jlbMaSP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cboMau, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jlbSLDC, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(cboSize, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jlbMaNHCT))
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jlbMaNhap))
                        .addGap(16, 16, 16)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jlbMaSP))
                        .addGap(13, 13, 13)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(cboMau, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(cboSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(13, 13, 13)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(jlbSLDC))
                        .addGap(13, 13, 13)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtSoLuongNhap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addGap(10, 10, 10)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(txtDonGia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(13, 13, 13)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(jlbTongSL))
                        .addGap(16, 16, 16)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(jlbTongTien))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnThem)
                            .addComponent(btnXoa)
                            .addComponent(btnMo)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(10, 10, 10)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        if (checkXoa())
            deleteCTNH();        // TODO add your handling code here:
    }//GEN-LAST:event_btnXoaActionPerformed

    private void tblDanhSachSPCTMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDanhSachSPCTMouseClicked
        fillSanPham(tblDanhSachSPCT.getSelectedRow());
        loadComboBoxMau();
        loadComboBoxSize();//        fillToFormCTSP(tblDanhSachSPCT.getSelectedRow());        // TODO add your handling code here:
    }//GEN-LAST:event_tblDanhSachSPCTMouseClicked

    private void btnMoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMoActionPerformed
        loadTablCTNhapHang();        // TODO add your handling code here:x`
    }//GEN-LAST:event_btnMoActionPerformed

    private void cboMauMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cboMauMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_cboMauMouseClicked

    private void cboMauActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboMauActionPerformed

        loadComboBoxSizeTheoMau((String) cboMau.getSelectedItem());
        fillSoLuong();
        // TODO add your handling code here:
    }//GEN-LAST:event_cboMauActionPerformed

    private void cboSizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboSizeActionPerformed
        fillSoLuong();        // TODO add your handling code here:
    }//GEN-LAST:event_cboSizeActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        if (check()) {
            insertCTNH();
        }// TODO add your handling code here: 
    }//GEN-LAST:event_btnThemActionPerformed

    private void tblDanhSachNhapCTMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDanhSachNhapCTMouseClicked

        fillToFormCTNhap(tblDanhSachNhapCT.getSelectedRow());

    }//GEN-LAST:event_tblDanhSachNhapCTMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QuanLyCTNH.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QuanLyCTNH.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QuanLyCTNH.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QuanLyCTNH.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QuanLyCTNH().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnMo;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JComboBox<String> cboMau;
    private javax.swing.JComboBox<String> cboSize;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel jlbMaNHCT;
    private javax.swing.JLabel jlbMaNhap;
    private javax.swing.JLabel jlbMaSP;
    private javax.swing.JLabel jlbSLDC;
    private javax.swing.JLabel jlbTongSL;
    private javax.swing.JLabel jlbTongTien;
    private javax.swing.JTable tblDanhSachNhapCT;
    private javax.swing.JTable tblDanhSachSPCT;
    private javax.swing.JTextField txtDonGia;
    private javax.swing.JTextField txtSoLuongNhap;
    private javax.swing.JTextField txtTimKiem;
    // End of variables declaration//GEN-END:variables

    public void loadTablChiTietSP() {
        String coulum[] = {"Mã SP", "Tên SP", "Giá"};
        DefaultTableModel model = new DefaultTableModel(coulum, 0);

        listSP = SanPhamDao.getAllSanPham();
        for (SanPham sv : listSP) {
            model.addRow(new Object[]{
                sv.getMaSP(),
                sv.getTenSP(),
                sv.getGia()
            });
        }
        tblDanhSachSPCT.setModel(model);
    }

    public void loadTablCTNhapHang() {
        String coulum[] = {"Mã CT Nhập Hàng", "Mã Nhập", "Mã SP", "Số Lượng", "Đơn Giá", "Màu", "Size"};
        DefaultTableModel model = new DefaultTableModel(coulum, 0);

        listNhap = CTNhapHangDao.getAllNhapHang(jlbMaNhap.getText());
        for (CTNhapHang sv : listNhap) {
            model.addRow(new Object[]{
                sv.getMaCTNH(),
                sv.getMaNhap(),
                sv.getMaSP(),
                sv.getSoLuong(),
                sv.getDonGia(),
                sv.getTenMau(),
                sv.getTenSize()
            });
        }
        tblDanhSachNhapCT.setModel(model);
    }

    public void fillMaNhap(JTextField txt1, JTextField txt2, JTextField txt3) {
        jlbMaNhap.setText(txt1.getText());
        jlbTongSL.setText(txt2.getText());
        jlbTongTien.setText(txt3.getText());
    }

    public void colorBorder() {
        txtSoLuongNhap.setBorder(BorderFactory.createLineBorder(Color.GRAY));
        txtTimKiem.setBorder(BorderFactory.createLineBorder(Color.GRAY));
        txtDonGia.setBorder(BorderFactory.createLineBorder(Color.GRAY));
    }

    public void fillToFormCTNhap(int index) {
        CTNhapHang sv = listNhap.get(index);
        jlbMaNHCT.setText("" + sv.getMaCTNH());
        jlbMaNhap.setText(sv.getMaNhap());
        jlbMaSP.setText(sv.getMaSP());
        txtSoLuongNhap.setText("" + sv.getSoLuong());
        txtDonGia.setText("" + sv.getDonGia());

        DefaultComboBoxModel model = new DefaultComboBoxModel();
        model.removeAllElements();
        listMau = MauDao.TimKiem(jlbMaSP.getText());
        model.addElement(sv.getTenMau());
        cboMau.setModel(model);
        
        DefaultComboBoxModel model1 = new DefaultComboBoxModel();
        model1.removeAllElements();
        listSize = SizeDao.TimKiem(jlbMaSP.getText());
        model1.addElement(sv.getTenSize());
        cboSize.setModel(model1);

        fillSoLuong();

    }

    public void fillSanPham(int index) {
        SanPham sp = listSP.get(index);
        jlbMaSP.setText(sp.getMaSP());
        fillSoLuong();
    }

    public void loadComboBoxMau() {
        DefaultComboBoxModel model = new DefaultComboBoxModel();
        model.removeAllElements();
        listMau = MauDao.TimKiem(jlbMaSP.getText());
        for (Mau sach : listMau) {
            model.addElement(sach.getTenMau());
        }
        cboMau.setModel(model);
    }

    public void loadComboBoxSize() {
        DefaultComboBoxModel model = new DefaultComboBoxModel();
        model.removeAllElements();
        listSize = SizeDao.TimKiem(jlbMaSP.getText());
        for (Size sach : listSize) {
            model.addElement(sach.getTenSize());
        }
        cboSize.setModel(model);
    }

    public int getAllSoLuong(String ma1, String ma2, String ma3) {
        int soLuong = 0;
        try {
            Connection con = DBHelper.getDBConnection();
            String sql = "select a.SOLUONG from CHITIETSANPHAM a inner join Size b on a.MASIZE = b.MASIZE inner join Mau c on a.mamau = c.mamau where a.MASP = '" + ma1 + "' and  c.tenMau = N'" + ma2 + "' and b.TENSIZE ='" + ma3 + "'";
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                soLuong = rs.getInt(1);
            }
        } catch (Exception e) {
            System.out.println("Lỗi Kết Nối");
            e.printStackTrace();
        }
        return soLuong;
    }

    public void fillSoLuong() {
        int soLuong = getAllSoLuong(jlbMaSP.getText(), (String) cboMau.getSelectedItem(), (String) cboSize.getSelectedItem());
        jlbSLDC.setText(String.valueOf(soLuong));
    }

    public int getTongSL(String ma) {
        int soLuong = 0;
        try {
            Connection con = DBHelper.getDBConnection();
            String sql = "select sum(soluong) from CHITIETNHAPHANG where maNhap='" + ma + "'";
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                soLuong = rs.getInt(1);
            }
        } catch (Exception e) {
            System.out.println("Lỗi Kết Nối");
            e.printStackTrace();
        }
        return soLuong;
    }

    public void fillTongSoLuong() {
        int soLuong = getTongSL(jlbMaNhap.getText());
        jlbTongSL.setText(String.valueOf(soLuong));
    }

    public float getTongTien(String ma) {
        float tongTien = 0;
        try {
            Connection con = DBHelper.getDBConnection();
            String sql = "select sum(soluong*dongia) from CHITIETNHAPHANG where maNhap='" + ma + "'";
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                tongTien = rs.getInt(1);
            }
        } catch (Exception e) {
            System.out.println("Lỗi Kết Nối");
            e.printStackTrace();
        }
        return tongTien;
    }

    public void fillTongTien() {
        float tongTien = getTongTien(jlbMaNhap.getText());
        jlbTongTien.setText(""+tongTien);
    }

    public void loadComboBoxSizeTheoMau(String ma2) {
        DefaultComboBoxModel model = new DefaultComboBoxModel();
        model.removeAllElements();
        listSize = SizeDao.fillToSize(jlbMaSP.getText(), ma2);
        for (Size sach : listSize) {
            model.addElement(sach.getTenSize());
        }
        cboSize.setModel(model);
    }

    public SanPhamChiTiet formToCTSP() {
        int soLuongDangCo = Integer.parseInt(jlbSLDC.getText());
        int soLuongNhap = Integer.parseInt(txtSoLuongNhap.getText());
        int soLuong = soLuongDangCo + soLuongNhap;
        System.out.println(soLuong);
        SanPhamChiTiet sv = new SanPhamChiTiet();
        sv.setSoLuong(soLuong);
        sv.setMaSP(jlbMaSP.getText());
        listMau = MauDao.TimKiem(jlbMaSP.getText());
        sv.setMaMau(listMau.get(cboMau.getSelectedIndex()).getMaMau());
        System.out.println(sv.getMaMau());
        
        listSize = SizeDao.fillToSize(jlbMaSP.getText(), (String) cboMau.getSelectedItem());
        sv.setMaSize(listSize.get(cboSize.getSelectedIndex()).getMaSize());
        return sv;
    }

    public SanPhamChiTiet formToCTSPKhiXoa() {
        int soLuongDangCo = Integer.parseInt(jlbSLDC.getText());
        int soLuongNhap = Integer.parseInt(txtSoLuongNhap.getText());
        int soLuong = soLuongDangCo - soLuongNhap;
        SanPhamChiTiet sv = new SanPhamChiTiet();
        sv.setSoLuong(soLuong);
        sv.setMaSP(jlbMaSP.getText());
        
        listMau = MauDao.TimKiem(jlbMaSP.getText());
        sv.setMaMau(listMau.get(cboMau.getSelectedIndex()).getMaMau());
        System.out.println(sv.getMaMau());
        
        listSize = SizeDao.fillToSize(jlbMaSP.getText(), (String) cboMau.getSelectedItem());
        sv.setMaSize(listSize.get(cboSize.getSelectedIndex()).getMaSize());
        System.out.println(sv.getMaSize());
        return sv;
    }

    public void UpdateSL() {
        SanPhamChiTiet sv = formToCTSP();
        SanPhamChiTietDao.updateLaiSL(sv);

    }

    public NhapHang formToNhapHang() {
        NhapHang nh = new NhapHang();
        nh.setMaNhap(jlbMaNhap.getText());
        nh.setTongSoLuong(Integer.parseInt(jlbTongSL.getText()));
        
        nh.setTongTien(Float.parseFloat(jlbTongTien.getText()));

        return nh;
    }

    public void UpdateNhapHang() {
        NhapHang sv = formToNhapHang();
        int rs = NhapHangDao.updateNhapHang2(sv);
        if (rs > 0) {
            JOptionPane.showMessageDialog(this, "Cập Nhật Nhập Hàng Thành Công");
        } else {
            JOptionPane.showMessageDialog(this, "Cập Nhật Nhập Hàng Thất Bại");
        }
    }

    public CTNhapHang formToCTNhapHang() {
        CTNhapHang ct = new CTNhapHang();
        ct.setMaCTNH(Integer.parseInt(jlbMaNHCT.getText()));
        ct.setSoLuong(Integer.parseInt(txtSoLuongNhap.getText()));
        ct.setDonGia(Float.parseFloat(txtDonGia.getText()));
        ct.setMaNhap(jlbMaNhap.getText());
        ct.setMaSP(jlbMaSP.getText());

        listMau = MauDao.TimKiem(jlbMaSP.getText());
        ct.setMaMau(listMau.get(cboMau.getSelectedIndex()).getMaMau());

        listSize = SizeDao.fillToSize(jlbMaSP.getText(), (String) cboMau.getSelectedItem());
        ct.setMaSize(listSize.get(cboSize.getSelectedIndex()).getMaSize());
     
        return ct;
    }

    public void insertCTNH() {
        CTNhapHang sv = formToCTNhapHang();
        int rs = CTNhapHangDao.insertCTNhapHang(sv);
        if (rs > 0) {
            JOptionPane.showMessageDialog(this, "Thêm Thành Công");
            loadTablCTNhapHang();
            UpdateSL();
            fillTongTien();
            fillTongSoLuong();
            UpdateNhapHang();

        } else {
            JOptionPane.showMessageDialog(this, "Thêm Thất Bại");
        }
    }

    public void capNhatKhiXoa() {
        SanPhamChiTiet sv = formToCTSPKhiXoa();
        int rs = SanPhamChiTietDao.updateLaiSL(sv);
        if (rs > 0) {
        } else {
        }
    }

    public void deleteCTNH() {
        int ma = JOptionPane.showConfirmDialog(this, "Bạn có muốn xóa Đơn Nhập này không?");
        if (ma == 0) {
            int rs = CTNhapHangDao.deleteCTNhapHang(jlbMaNHCT.getText());
            if (rs > 0) {
                JOptionPane.showMessageDialog(this, "Xoá Thành Công");
                loadTablCTNhapHang();
                capNhatKhiXoa();
                fillTongSoLuong();
                fillTongTien();
                fillSoLuong();
                UpdateNhapHang();
            } else {
                JOptionPane.showMessageDialog(this, "Xóa Thất Bại");
            }
        } else {
            return;
        }
    }

    public boolean check() {
        if (jlbMaNhap.getText().equals("Mã Nhập")) {
            JOptionPane.showMessageDialog(this, "Bạn chưa chọn Hóa Đơn trong bảng!!");
            return false;
        }
        if (txtSoLuongNhap.getText().isBlank()) {
            JOptionPane.showMessageDialog(this, "Số Lượng Nhập Không Được Để Trống!!");
            return false;
        }
        if (txtDonGia.getText().isBlank()) {
            JOptionPane.showMessageDialog(this, "Đơn Giá Không Được Để Trống!!");
            return false;
        }
        try {
            int soLuong = Integer.parseInt(txtSoLuongNhap.getText());
            float gia = Float.parseFloat(txtDonGia.getText());
            if (soLuong < 0) {
                JOptionPane.showMessageDialog(this, "Số Lượng Không Được Nhập Số Âm!!");
                return false;
            }
            if (gia < 0) {
                JOptionPane.showMessageDialog(this, "Đơn Giá Không Được Nhập Số Âm!!");
                return false;
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Vui Lòng Nhập Số!!");
        }
        return true;
    }

    public boolean checkXoa() {
        if (jlbMaNHCT.getText().equals("0")) {
            JOptionPane.showMessageDialog(this, "Bạn chưa chọn Hóa Đơn trong bảng!!");
            return false;
        }
        if (jlbMaNhap.getText().equals("Mã Nhập")) {
            JOptionPane.showMessageDialog(this, "Bạn chưa chọn Hóa Đơn trong bảng!!");
            return false;
        }
        return true;
    }
    
  
}
